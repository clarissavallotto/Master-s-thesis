%% Quantile regressions and density matching
% This script estimates quantile regressions of future OECD+6NME IP on current
% values of OECD+6NME IP and the EFFR & SFFR, and matches skewed t-distributions to the 
% estimated quantiles. It produces the charts presented in the following
% figures:
% - Figure 1. Distribution of OECD+6NME IP growth over time.
% - Figure 5. Predicted Distributions.
% - Figure 6. Median, Interquartile Range, and 5 Percent Quantile of the
%             Predicted Distribution.
% - Figure 7. The Conditional Quantiles and the Skewed t-Distribution.
% - Figure 8. Probability Densities.
% - Figure 9. Growth Entropy and Expected Shortfall over Time.
% - Figure 13. Mean, Volatility, and Entropy.
% - Figure 14. Median, Interquartile Range, and 5 Percent Quantile.
 
% This script requires MATLAB's Optimization Toolbox.
 
% From the replication files for:
% Tobias Adrian, Nina Boyarchenko, and Domenico Giannone (2018):
% "Vulnerable Growth," American Economic Review.

%% Clear workspace, set file paths and graphics/estimation settings
clear
close all
clc

addpath('azzalini')

set(0, 'defaultAxesFontName', 'Times');
set(0, 'DefaultAxesFontSize', 13)
set(0, 'defaultAxesLineStyleOrder', '-|--|:', 'defaultLineLineWidth', 1.5)
setappdata(0, 'defaultAxesXTickFontSize', 1)
setappdata(0, 'defaultAxesYTickFontSize', 1)

% Folder to store figures
FigSubFolder = 'FigMainResults_EFFR+SFFR';
if ~exist(FigSubFolder,'dir')
    mkdir(FigSubFolder);
end

% Should saved density matching results be loaded?
% Or should density matching be reperformed?
loadSavedResults = true;

%% Load data and fix forecast settings
load('INPUT.mat', 'X', 'Time', 'Mnem')

[T, n] = size(X);

% Forecast settings
H = [3, 12];          % Horizons to forecast (# of months ahead)
QQ = 0.05:0.05:0.95;  % Quantiles to estimate in quantile regressions

% Indices for selected quantiles
[~, jq05] = min(abs(QQ - 0.05));
[~, jq25] = min(abs(QQ - 0.25));
[~, jq50] = min(abs(QQ - 0.50));
[~, jq75] = min(abs(QQ - 0.75));
[~, jq95] = min(abs(QQ - 0.95));

% Construct average growth rates
y = X(:, strcmp(Mnem, 'AOECD_WIP'));
for h = 1:12
    Yh(:, h) = filter(ones(1, h) / h, 1, y);
    Yh(1:(h - 1), h) = NaN;
end

% Dates for which you want to plot the density (12-month lag)
JT = [
    % 1982 global recession
    % phase 1
    find(year(Time) == 1979 & month(Time) == 1);                           % peak: January 1980
    find(year(Time) == 1980 & month(Time) == 3);                           % trough: March 1981
    % phase 2
    find(year(Time) == 1980 & month(Time) == 9);                           % peak: September 1981
    find(year(Time) == 1981 & month(Time) == 10);                          % trough: October 1982

    % 1991 global recession
    find(year(Time) == 1987 & month(Time) == 1);                           % peak: January 1988
    find(year(Time) == 1990 & month(Time) == 3);                           % trough: March 1991

    % 2009 global recession
    find(year(Time) == 2007 & month(Time) == 1);                           % peak: January 2008
    find(year(Time) == 2008 & month(Time) == 1);                           % trough: January 2009
    ];

% axis limits for various plots (these are horizon-dependent)
ylimsPredictedDistribution = [
    NaN, NaN;
	NaN, NaN;
    -20,  20;
    NaN, NaN;
    NaN, NaN;
    NaN, NaN;
    NaN, NaN;
    NaN, NaN;
    NaN, NaN;
    NaN, NaN;
    NaN, NaN;
    -20,  20;
    ];

%% Main results
% Estimate quantile regressions (for all quantiles and forecast horizons)
ResMain    = QRboot(X(:, strcmp(Mnem, 'EFFR+SFFR')), y, H, 1, QQ);
ResOECDWIPonly = QRboot([], y, H, 1, QQ);
ResUnc     = QRboot([], y, H, 0, QQ);

% Loop over forecast horizons
for h = 12
    % Get quantiles of predictive distribution
    YQunc     = ResUnc.YQ(end, :, h);
    YQ        = ResMain.YQ(:, :, h);
    Y2        = ResMain.Y2(:, h);
    YQOECDWIPonly = ResOECDWIPonly.YQ(:, :, h);
    QQ        = ResMain.QQ;
    
    %% Figure 5: Predicted Distributions
    filename = fullfile(FigSubFolder, ['OECDWIP_M', num2str(h), '_TS.pdf']);
    % if h == 3
        legendLocation = 'NorthEast';
    % elseif h == 12
    %    legendLocation = 'SouthEast';
    % end
    PlotPredictiveTS(YQ, QQ, Time, Yh(:, h),...
                     'ylims', ylimsPredictedDistribution(h, :),...
                     'filename', filename,...
                     'legendLocation', legendLocation);
    clear('filename', 'legendLocation')
    
    %% Figure 6: Median, Interquartile Range, and 5 Percent Quantile
    % (a)/(b) Median and Interquartile Range
    f = figure;
    scatter(YQ(:, jq75) - YQ(:, jq25), YQ(:, jq50), 75, [20, 91, 142] / 255)
    xlim([0, 10])
    ylim([-20, 15])
    box on;
    xlabel('Interquartile range')
    ylabel('Median')
    filename = fullfile(FigSubFolder, ['IQRvM_M', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')
    
    % (c)/(d) Q5 and Interquartile Range
    f = figure;
    scatter(YQ(:, jq75) - YQ(:, jq25), YQ(:, jq05), 75, [20, 91, 142] / 255)
    box on;
    xlabel('Interquartile range')
    ylabel('5th quantile')
    xlim([0, 10])
    ylim([-20, 15])
    filename = fullfile(FigSubFolder, ['IQRvQ5_M', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')

    %% Fit skewed-t densities to estimated quantiles OR load saved results
    if loadSavedResults
        filename = ['ResMatch_H', num2str(h), '_EFFR+SFFR.mat'];
        disp(['Loading saved density matching results from file ', filename])
        load(filename)
        clear('filename')
    else
        disp('Matching densities for quantile regression using OECD+6NME IP and EFFR & SFFR.')
        ResMatch = Step2match(YQ, YQunc, QQ);
        disp('Matching densities for quantile regression using OECD+6NME IP only.')
        ResMatchOECDWIPonly = Step2match(YQOECDWIPonly, YQunc, QQ);
        
        % Save results to .mat file
        filename = ['ResMatch_H', num2str(h), '_EFFR+SFFR.mat'];
        disp(['Saving results to file ', filename])
        save(filename, 'ResMatch', 'ResMatchOECDWIPonly')
        clear('filename')
    end

    Time = datenum(Time);

    %% Figure 1: 3D density plot
    f = figure;
    meshc(Time, ResMatch.YY', ResMatch.PST')
    datetick('x', 'yyyy')
    view(85, 50)
    set(gca, 'YLim', [-15, 12])
    set(gca, 'XLim', [Time(1), Time(end)])
    xlabel('Time')
    filename = fullfile(FigSubFolder, ['Dens3D_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')
    
    %% Plot densities for specific dates (Figures 7 and 8)
    for jt = JT'
        % Figure 8: Probability Densities
        f = figure;
        plot(ResMatch.YY, ResMatch.PST(jt + h, :),...
             ResMatch.YY, ResMatchOECDWIPonly.PST(jt + h, :), '--');
        axis([-15, 15, 0, 1.2])
        ylabel('PDF')
        legend('OECD+6NME IP and EFFR & SFFR', 'OECD+6NME IP only', 'Location', 'NorthWest')
        grid on
        filename = fullfile(FigSubFolder, ['PDF_H', num2str(h), '_', num2str(year(Time(jt))), 'M', num2str(ceil(month(Time(jt)))), '.pdf']);
        printpdf(f, filename);
        clear('f', 'filename');
        
        % Figure 7: Conditional Quantiles and the Skewed t-Distribution
        f = figure;
        plot(QQ, ResMatch.QST(jt + h, :),...
             QQ, ResMatchOECDWIPonly.QST(jt + h, :), '--',...
             QQ, YQ(jt + h, :), '-*');
        xlabel('\tau')
        ylabel('OECD+6NME IP growth')
        ylim([-15, 15])
        grid on
        legend('OECD+6NME IP and EFFR & SFFR', 'OECD+6NME IP only', 'Raw', 'Location', 'NorthWest')
        grid on
        filename = fullfile(FigSubFolder, ['InverseCDF_H', num2str(h), '_', num2str(year(Time(jt))), 'M', num2str(ceil(month(Time(jt)))), '.pdf']);
        printpdf(f, filename);
        clear('f', 'filename')
    end

    %% Figure 9: Growth Entropy and Expected Shortfall over Time
    % (a)/(b) Entropy
    f = figure;
    hold on
    plot(Time, ResMatch.LeftEntropyST, '-');
    plot(Time, ResMatch.RightEntropyST, '--');
    hold off
    legend('Downside', 'Upside')
    ylabel('Relative Entropy')
    datetick('x', 'yyyy')
    xlim([Time(1), Time(end)])
    ylim([-0.5, 5])
    box on
    filename = fullfile(FigSubFolder, ['Entropy_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')

    % (c)/(d) Expected Shortfall and Longrise
    f = figure;
    hold on
    plot(Time, ResMatch.EsfST, '-')
    plot(Time, ResMatch.EljST, '--')
    hold off
    legend('Shortfall', 'Longrise')
    datetick('x', 'yyyy')
    xlim([Time(1), Time(end)])
    ylim([-21, 20])
    box on
    filename = fullfile(FigSubFolder, ['ExpectedShortfall_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')
    
    %% Figure 13: Mean, Volatility, and Entropy
    % (a)/(b) Mean and Volatility
    f=figure;
    scatter(ResMatch.MeanST, sqrt(ResMatch.VarianceST), 75, [20, 91, 142] / 255)
    box on;
    ylabel('Standard Deviation')
    xlabel('Mean')
    ylim([-6, 6])
    % yticks(-6:6)
    xlim([-15, 15])
    % xticks((-15):15)
    filename = fullfile(FigSubFolder, ['MEANvSTD_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')

    % (c)/(d) Mean and Entropy
    f = figure;
    scatter(ResMatch.MeanST, ResMatch.LeftEntropyST, 75, [20, 91, 142] / 255)
    box on;
    ylabel('Downside Entropy')
    xlabel('Mean')
    ylim([-1, 5])
    xlim([-15, 15])
    % xticks((-15):15)
    filename = fullfile(FigSubFolder, ['MEANvENT_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')

    %% Figure 14: Median, Interquartile Range, and 5 Percent Quantile
    % (a)/(b) Cross-Correlogram Mean and Volatility
    nLags = 48;
    [XFC, Lags, Bounds] = crosscorr(ResMatch.MeanST((h + 1):end), sqrt(ResMatch.VarianceST((h + 1):end)), nLags);

    % Determine significant/insignificant correlations
    ix = ((-nLags):nLags) + nLags + 1;
    ix_sig = ix((XFC >= Bounds(1)) | (XFC <= Bounds(2))); % Correlations outside of significance bounds
    ix_ins = ix((Bounds(1) > XFC) & (Bounds(2) < XFC));
    
    f = figure;
    hold on
    stem(Lags(ix_sig), XFC(ix_sig), 'filled', 'Color', [20, 91, 142] / 255, 'LineWidth', 0.5, 'MarkerSize', 3)
    stem(Lags(ix_ins), XFC(ix_ins), 'Color', [20, 91, 142] / 255, 'LineWidth', 0.5, 'MarkerSize', 3)
    hold off
    box on
    xlim([-nLags, nLags])
    xticks(-nLags:12:nLags)
    ylim([-1.0, 0.5])
    xlabel('Volatility Lag')
    filename = fullfile(FigSubFolder, ['MeanStdxcorr_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')

    % (c)/(d) Cross-Correlogram Mean and Entropy
    nLags = 48;
    [XFC, Lags, Bounds] = crosscorr(ResMatch.MeanST((h + 1):end), ResMatch.LeftEntropyST((h + 1):end), nLags);

    % Determine significant/insignificant correlations
    ix = ((-nLags):nLags) + nLags + 1;
    ix_sig = ix((XFC >= Bounds(1)) | (XFC <= Bounds(2)));
    ix_ins = ix((Bounds(1) > XFC) & (Bounds(2) < XFC));
    
    f = figure;
    hold on
    stem(Lags(ix_sig), XFC(ix_sig), 'filled', 'Color', [20, 91, 142] / 255, 'LineWidth', 0.5, 'MarkerSize', 3)
    stem(Lags(ix_ins), XFC(ix_ins), 'Color', [20, 91, 142] / 255, 'LineWidth', 0.5, 'MarkerSize', 3)
    hold off
    box on
    xlim([-nLags, nLags])
    xticks(-nLags:12:nLags)
    ylim([-1.0, 1])
    xlabel('Entropy Lag')
    filename = fullfile(FigSubFolder, ['MeanEntrxcorr_H', num2str(h), '.pdf']);
    printpdf(f, filename);
    clear('f', 'filename')

    DE_EFFRSFFR_12M = ResMatch.LeftEntropyST;

    ES_EFFRSFFR_12M = ResMatch.EsfST;

    save DE_ES_EFFRSFFR_12M.mat;
end

clear